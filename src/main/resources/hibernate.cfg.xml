<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>

        <!-- 以下所有信息都可以在Spring的数据库连接、Hibernate的SessionFactory配置中进行设置  -->

       <!-- 指定连接数据库所用的驱动 -->
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <!-- 指定数据库方言。Hibernate根据数据库方言来识别数据库之间的差异 -->
        <property name="dialect">org.hibernate.dialect.MySQL5Dialect</property>
        <!-- 指定连接数据库的url，其中hibernate是本应用连接的数据库名 -->
        <property name="connection.url">jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF8</property>
        <!-- 指定连接数据库的用户名 -->
        <property name="connection.username">root</property>
        <!-- 指定连接数据库的密码 -->
        <property name="connection.password">hzx123</property>
        <!-- 指定连接池里最大连接数 -->
        <property name="hibernate.c3p0.max_size">25</property>
        <!-- 指定连接池里最小连接数 -->
        <property name="hibernate.c3p0.min_size">3</property>
        <!-- 指定连接池里连接的超时时长 -->
        <property name="hibernate.c3p0.timeout">3000</property>
        <!-- 指定连接池里最大缓存Statement对象的数量 -->
        <property name="hibernate.c3p0.max_statements">100</property>
        <!-- 指定连接池里空闲连接的检查时间间隔 -->
        <property name="hibernate.c3p0.idle_test_period">3000</property>
        <!-- 指定连接池里连接耗尽的时候一次同时获取的连接数 -->
        <property name="hibernate.c3p0.acquire_increment">3</property>
        <!-- 每次都验证连接是否可用，为了性能可以设置为false -->
        <property name="hibernate.c3p0.validate">false</property>

        <!-- 可以设置取值create|create-drop|update|validate之一，主要用于自动创建|更新|验证数据库表结构：
        create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，
                哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因；
        create-drop：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除；
        update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），
                以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。
                要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要 应用第一次运行起来后才会；
        validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
        以上4个属性对同一配置文件下所用有的映射表都起作用 -->
        <property name="hbm2ddl.auto">update</property>
        <!-- 打印Hibernate操作所生成的SQL。开发时设置为true，便于差错，程序运行时可以在Eclipse
        的控制台显示Hibernate的执行Sql语句。开发时设置为true，便于查错，项目部署后可以设置为false，提高运行效率 -->
        <property name="show_sql">true</property>
        <!-- 将SQL脚本进行格式化后再输出 -->
        <property name="hibernate.format_sql">true</property>
        <!-- 避免这个错误信息Disabling contextual LOB creation as createClob() method threw error :
        java.lang.reflect.InvocationTargetException -->
        <property name="hibernate.temp.use_jdbc_metadata_defaults">false</property>

        <!-- 罗列所有持久化映射文件路径 -->
        <mapping resource="com/test/entity/User.hbm.xml"/>
        <mapping resource="com/test/entity/Teacher.hbm.xml"/>
        <!-- 也可以罗列所有持久化类的类名 -->
        <!--<mapping class="com.test.entity.User"/>
        <mapping class="com.test.entity.Teacher"/>-->
    </session-factory>
</hibernate-configuration>